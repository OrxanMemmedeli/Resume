@model Resume.Models.ViewModels.ResumeViewModel
@{
    Layout = null;
    string educationDate = string.Empty;
    string experienceDate = string.Empty;
    string docName = Model.Info.Name.Replace(" ", "_") + " " + Model.Info.Surname.Replace(" ", "_") + ".pdf";
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width" />
    <title>DownloadCV</title>
    <meta name="author" content="Khan">
    <meta name="description" content="M. Orxan CV/Resume">
    <meta name="keywords" content="Khan">
    <link rel="icon" type="image/png" sizes="16x16" href="~/images/logos/KHAN.jpg">

    <link href="https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="https://code.jquery.com/jquery-3.5.1.js">

    <link href="~/Resume/style.css" rel="stylesheet" />
    <style>
        .button {
            margin-left: 40vw;
        }

        .btn {
            background-color: #013809;
            border: none;
            color: white;
            padding: 12px 30px;
            cursor: pointer;
            font-size: 20px;
            border-radius: 5px;
        }

            .btn:hover {
                background-color: #00610f;
            }
    </style>
    <script>
        window.addEventListener("pageshow", function (event) {
            var historyTraversal = event.persisted ||
                (typeof window.performance != "undefined" &&
                    window.performance.navigation.type === 2);
            if (historyTraversal) {
                // Handle page restore.
                window.location.reload(true);
            }
        });
    </script>

</head>
<body>

    <div class="button" style="margin-bottom:20px">
        <button class="btn" id="download"><i class="fa fa-download"></i> PDF versiyanı yüklə</button>
    </div>


    <div class="resume" id="resume">
        <div class="column">
            <div class="grid">
                <section class="profile">
                    <h1>@Model.Info.Name @Model.Info.Surname</h1>
                    <p><em>@Model.Info.Speciality</em></p>
                    <img src="@Model.Info.FotoURL" alt="">
                </section>
                <section class="socials">
                    <h2>ƏLAQƏ</h2>
                    <ul>
                        <li><i class="fas fa-map-marker-alt"></i> @Model.Info.Adress </li>
                        <li><i class="fas fa-birthday-cake"></i> @Model.Info.BirthDate.ToString("dd-MM-yyyy") </li>
                        <li><i class="fas fa-phone"></i> @Model.Info.Telephone </li>
                        <li><i class="fas fa-at"></i> @Model.Info.Email </li>
                        @foreach (var item in Model.Sosials)
                        {
                            <li>@Html.Raw(item.Icon) <a href="@item.PageURL">@item.Name</a></li>
                        }
                    </ul>
                </section>
            </div>

            <section class="objectives">
                <h2>HAQQIMDA</h2>
                <p style="font-size:1.25rem">
                    @Html.Raw(Model.Info.About)
                </p>
            </section>

            <section class="education">
                <h2>TƏHSİL</h2>
                <ul class="timeline">
                    @foreach (var item in Model.Educations)
                    {
                        if (item.ShowMonth)
                        {
                            educationDate += "MM.";
                        }
                        if (item.ShowYear)
                        {
                            educationDate += "yyyy";
                        }
                        <li class="event">
                            <span class="duration">@item.StartDate.ToString(educationDate)  <span style="color:salmon">@(item.Present == true? "Dəvam edir" : item.EndDate.ToString(educationDate))</span></span>
                            @(educationDate = null)
                            <div class="content">
                                <h3>@item.EducationCenter</h3>
                                <p><em><strong>@item.Description</strong></em></p>
                                <p>* @item.Faculty</p>
                                <p>* @item.Specialty</p>
                            </div>
                        </li>
                    }
                </ul>
            </section>

            <section class="experience">
                <h2>TƏCRÜBƏ</h2>
                <ul class="timeline">
                    @foreach (var item in Model.Experiences)
                    {
                        if (item.ShowMonth)
                        {
                            experienceDate += "MM.";
                        }
                        if (item.ShowYear)
                        {
                            experienceDate += "yyyy";
                        }
                        <li class="event">
                            <span class="duration">@item.StartDate.ToString(experienceDate)  <span style="color:salmon">@(item.Present == true? "Dəvam edir" : item.EndDate.ToString(experienceDate))</span></span>
                            @(experienceDate = null)
                            <div class="content">
                                <h3>@item.Company</h3>
                                <p><em><strong>@item.Position</strong></em></p>
                                <p>* @item.Description</p>
                            </div>
                        </li>
                    }
                </ul>
            </section>

            <section class="skills">
                <h2>BİLİK VƏ BACARIQLAR</h2>
                <ul>
                    <li>
                        <h3>Professional</h3>
                        <ul>
                            <li>Lorem.</li>
                            <li>A?</li>
                            <li>Possimus.</li>
                            <li>Quaerat?</li>
                            <li>Enim.</li>
                            <li>Illo!</li>
                            <li>Optio.</li>
                            <li>Tenetur!</li>
                        </ul>
                    </li>
                    <li>
                        <h3>Personal</h3>
                        <ul>
                            <li>Lorem.</li>
                            <li>Nesciunt?</li>
                            <li>Nulla.</li>
                            <li>Eligendi.</li>
                            <li>Nesciunt.</li>
                            <li>Excepturi!</li>
                            <li>Dolore?</li>
                            <li>Quod.</li>
                        </ul>
                    </li>
                </ul>
            </section>
        </div>

        <div class="column">

        </div>
    </div>

    <script defer src="https://use.fontawesome.com/releases/v5.0.8/js/all.js" integrity="sha384-SlE991lGASHoBfWbelyBPLsUlwY1GwNDJo3jSJO04KZ33K2bwfV9YBauFfnzvynJ" crossorigin="anonymous"></script>
    <script src="https://use.fontawesome.com/7b0b2c68b4.js"></script>

    <input type="button" id="btnExport" value="Export" />
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.22/pdfmake.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js"></script>
    <script type="text/javascript">
        $("body").on("click", "#btnExport", function () {
            html2canvas($('#resume')[0], {
                onrendered: function (canvas) {
                    var data = canvas.toDataURL();
                    var docDefinition = {
                        content: [{
                            image: data,
                            width: 500
                        }]
                    };
                    pdfMake.createPdf(docDefinition).download("customer-details.pdf");
                }
            });
        });
    </script>

    <script>
        function HTMLtoPDF() {
            // Default export is a4 paper, portrait, using millimeters for units
            //var doc = new jspdf.jsPDF();
            //var HTMLelement = $("#resume").html();
            var HTMLelement = document.getElementById("#resume");

            //var opt = {
            //    margin: 10,
            //    filename: 'resume.pdf',
            //    image: { type: 'jpeg', quality: 0.98 },
            //    html2canvas: { scale: 2, logging: true, dpi: 192, letterRendering: true },
            //    jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }
            //};

            //html2pdf().from(HTMLelement).set(opt).save();
            html2pdf(HTMLelement)
            //doc.text("Hello world!", 10, 10);

            //doc.fromHTML(HTMLelement, 10, 10, {
            //    'width': 240,
            //});
            //doc.save('test.pdf');
        }
    </script>
</body>
</html>


<!--For pfd https://github.com/MrRio/jsPDF -->